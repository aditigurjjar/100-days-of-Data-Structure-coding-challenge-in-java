/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null||head.next==null)
        {
            return true;
        }
        ListNode slow=head;
        ListNode fast=head;
        ListNode prev,temp,temp1,temp2;
        while(fast!=null&&fast.next!=null)
        {  
            slow=slow.next;
            fast=fast.next.next;
        }
        prev=null;
        temp=slow.next;
          while(slow!=null)
          { temp=slow.next;
            slow.next=prev;
             prev=slow; 
           slow=temp;
               
          }
        temp1=head;
        temp2=prev;
        while(temp2!=null)
        {
            if(temp1.val!=temp2.val)
            {
               return false;
            }
             temp1=temp1.next;
                temp2=temp2.next;
        }
        
        return true; 
    }
}